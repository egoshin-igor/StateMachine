N: 0;	Name:<PROG>;	Set:Void;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:2;	IsEnd:False
N: 1;	Name:[END];	Set:;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:True
N: 2;	Name:void;	Set:Void;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:3;	IsEnd:False
N: 3;	Name:main;	Set:Main;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:4;	IsEnd:False
N: 4;	Name:{;	Set:OpeningBrace;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:5;	IsEnd:False
N: 5;	Name:<body>;	Set:DEnd, Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:7;	IsEnd:False
N: 6;	Name:};	Set:ClosingBrace;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 7;	Name:<declarations>;	Set:DEnd, Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:11;	IsEnd:False
N: 8;	Name:<body___10000>;	Set:ClosingBrace, DecimalWholeNumber, BinaryWholeNumber, For, If, Identifier, Minis, OpeningRoundBracket, Print, Println;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:9;	IsEnd:False
N: 9;	Name:[EPS];	Set:ClosingBrace;	Shift:False;	OnErr:10;	Stack:False;	GoTo:-1;	IsEnd:False
N: 10;	Name:<operators>;	Set:For, If, Identifier, DecimalWholeNumber, BinaryWholeNumber, Minis, OpeningRoundBracket, Print, Println;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:25;	IsEnd:False
N: 11;	Name:<declarations_0>;	Set:DEnd, Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:13;	IsEnd:False
N: 12;	Name:@@@;	Set:DEnd;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 13;	Name:[EPS];	Set:DEnd;	Shift:False;	OnErr:14;	Stack:False;	GoTo:-1;	IsEnd:False
N: 14;	Name:<declaration>;	Set:Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:17;	IsEnd:False
N: 15;	Name:`;	Set:Tilda;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:16;	IsEnd:False
N: 16;	Name:<declarations_0>;	Set:DEnd, Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:13;	IsEnd:False
N: 17;	Name:<type>;	Set:Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:19;	IsEnd:False
N: 18;	Name:#IDENTIFIER#;	Set:Identifier;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 19;	Name:bool;	Set:Bool;	Shift:True;	OnErr:20;	Stack:False;	GoTo:-1;	IsEnd:False
N: 20;	Name:char;	Set:Char;	Shift:True;	OnErr:21;	Stack:False;	GoTo:-1;	IsEnd:False
N: 21;	Name:float;	Set:Float;	Shift:True;	OnErr:22;	Stack:False;	GoTo:-1;	IsEnd:False
N: 22;	Name:int;	Set:Int;	Shift:True;	OnErr:23;	Stack:False;	GoTo:-1;	IsEnd:False
N: 23;	Name:IntArray;	Set:IntArray;	Shift:True;	OnErr:24;	Stack:False;	GoTo:-1;	IsEnd:False
N: 24;	Name:string;	Set:String;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 25;	Name:<operator>;	Set:Identifier, DecimalWholeNumber, BinaryWholeNumber, Minis, OpeningRoundBracket, Print, Println;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:29;	IsEnd:False
N: 26;	Name:<operators___10000>;	Set:ClosingBrace, DecimalWholeNumber, BinaryWholeNumber, For, If, Identifier, Minis, OpeningRoundBracket, Print, Println;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:27;	IsEnd:False
N: 27;	Name:[EPS];	Set:ClosingBrace;	Shift:False;	OnErr:28;	Stack:False;	GoTo:-1;	IsEnd:False
N: 28;	Name:<operators>;	Set:For, If, Identifier, DecimalWholeNumber, BinaryWholeNumber, Minis, OpeningRoundBracket, Print, Println;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:25;	IsEnd:False
N: 29;	Name:<leftValue>;	Set:Identifier;	Shift:False;	OnErr:33;	Stack:True;	GoTo:75;	IsEnd:False
N: 30;	Name:=;	Set:Equally;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:31;	IsEnd:False
N: 31;	Name:<rightValue>;	Set:DecimalWholeNumber, BinaryWholeNumber, Minis, OpeningRoundBracket, Identifier;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:76;	IsEnd:False
N: 32;	Name:`;	Set:Tilda;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 33;	Name:<ariphmeticalOperation>;	Set:DecimalWholeNumber, BinaryWholeNumber, Minis, OpeningRoundBracket, Identifier;	Shift:False;	OnErr:35;	Stack:True;	GoTo:48;	IsEnd:False
N: 34;	Name:`;	Set:Tilda;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 35;	Name:<print>;	Set:Print, Println;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:37;	IsEnd:False
N: 36;	Name:`;	Set:Tilda;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 37;	Name:Print;	Set:Print;	Shift:True;	OnErr:41;	Stack:False;	GoTo:38;	IsEnd:False
N: 38;	Name:(;	Set:OpeningRoundBracket;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:39;	IsEnd:False
N: 39;	Name:<printValue>;	Set:DecimalWholeNumber, Identifier, ClosingRoundBracket;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:45;	IsEnd:False
N: 40;	Name:);	Set:ClosingRoundBracket;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 41;	Name:Println;	Set:Println;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:42;	IsEnd:False
N: 42;	Name:(;	Set:OpeningRoundBracket;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:43;	IsEnd:False
N: 43;	Name:<printValue>;	Set:DecimalWholeNumber, Identifier, ClosingRoundBracket;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:45;	IsEnd:False
N: 44;	Name:);	Set:ClosingRoundBracket;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 45;	Name:#DecimalWholeNumber#;	Set:DecimalWholeNumber;	Shift:True;	OnErr:46;	Stack:False;	GoTo:-1;	IsEnd:False
N: 46;	Name:#IDENTIFIER#;	Set:Identifier;	Shift:True;	OnErr:47;	Stack:False;	GoTo:-1;	IsEnd:False
N: 47;	Name:[EPS];	Set:ClosingRoundBracket;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 48;	Name:<ariphmeticalOperation_0>;	Set:DecimalWholeNumber, BinaryWholeNumber, Minis, OpeningRoundBracket, Identifier;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:50;	IsEnd:False
N: 49;	Name:<ariphmeticalOperation_1>;	Set:Plus, Minis, Tilda, ClosingRoundBracket;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:59;	IsEnd:False
N: 50;	Name:<number>;	Set:DecimalWholeNumber, BinaryWholeNumber, Identifier, OpeningRoundBracket, Minis;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:66;	IsEnd:False
N: 51;	Name:<mulArOp>;	Set:Multiple, Division, Plus, Tilda, Minis, ClosingRoundBracket;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:52;	IsEnd:False
N: 52;	Name:*;	Set:Multiple;	Shift:True;	OnErr:55;	Stack:False;	GoTo:53;	IsEnd:False
N: 53;	Name:<number>;	Set:DecimalWholeNumber, BinaryWholeNumber, Identifier, OpeningRoundBracket, Minis;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:66;	IsEnd:False
N: 54;	Name:<mulArOp>;	Set:Multiple, Division, Plus, Tilda, Minis, ClosingRoundBracket;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:52;	IsEnd:False
N: 55;	Name:div;	Set:Division;	Shift:True;	OnErr:58;	Stack:False;	GoTo:56;	IsEnd:False
N: 56;	Name:<number>;	Set:DecimalWholeNumber, BinaryWholeNumber, Identifier, OpeningRoundBracket, Minis;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:66;	IsEnd:False
N: 57;	Name:<mulArOp>;	Set:Multiple, Division, Plus, Tilda, Minis, ClosingRoundBracket;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:52;	IsEnd:False
N: 58;	Name:[EPS];	Set:Plus, Tilda, Minis, ClosingRoundBracket;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 59;	Name:+;	Set:Plus;	Shift:True;	OnErr:62;	Stack:False;	GoTo:60;	IsEnd:False
N: 60;	Name:<ariphmeticalOperation_0>;	Set:DecimalWholeNumber, BinaryWholeNumber, Minis, OpeningRoundBracket, Identifier;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:50;	IsEnd:False
N: 61;	Name:<ariphmeticalOperation_1>;	Set:Plus, Minis, Tilda, ClosingRoundBracket;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:59;	IsEnd:False
N: 62;	Name:-;	Set:Minis;	Shift:True;	OnErr:65;	Stack:False;	GoTo:63;	IsEnd:False
N: 63;	Name:<ariphmeticalOperation_0>;	Set:DecimalWholeNumber, BinaryWholeNumber, Minis, OpeningRoundBracket, Identifier;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:50;	IsEnd:False
N: 64;	Name:<ariphmeticalOperation_1>;	Set:Plus, Minis, Tilda, ClosingRoundBracket;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:59;	IsEnd:False
N: 65;	Name:[EPS];	Set:Tilda, ClosingRoundBracket;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 66;	Name:<number2>;	Set:DecimalWholeNumber, BinaryWholeNumber, Identifier;	Shift:False;	OnErr:67;	Stack:False;	GoTo:72;	IsEnd:False
N: 67;	Name:(;	Set:OpeningRoundBracket;	Shift:True;	OnErr:70;	Stack:False;	GoTo:68;	IsEnd:False
N: 68;	Name:<ariphmeticalOperation>;	Set:DecimalWholeNumber, BinaryWholeNumber, Minis, OpeningRoundBracket, Identifier;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:48;	IsEnd:False
N: 69;	Name:);	Set:ClosingRoundBracket;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 70;	Name:-;	Set:Minis;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:71;	IsEnd:False
N: 71;	Name:<number>;	Set:DecimalWholeNumber, BinaryWholeNumber, Identifier, OpeningRoundBracket, Minis;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:66;	IsEnd:False
N: 72;	Name:#DecimalWholeNumber#;	Set:DecimalWholeNumber;	Shift:True;	OnErr:73;	Stack:False;	GoTo:-1;	IsEnd:False
N: 73;	Name:#BinaryWholeNumber#;	Set:BinaryWholeNumber;	Shift:True;	OnErr:74;	Stack:False;	GoTo:-1;	IsEnd:False
N: 74;	Name:#IDENTIFIER#;	Set:Identifier;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 75;	Name:#IDENTIFIER#;	Set:Identifier;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 76;	Name:<ariphmeticalOperation>;	Set:DecimalWholeNumber, BinaryWholeNumber, Minis, OpeningRoundBracket, Identifier;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:48;	IsEnd:False
