N: 0;	Name:<PROG>;	Set:Void;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:2;	IsEnd:False
N: 1;	Name:[END];	Set:;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:True
N: 2;	Name:void;	Set:Void;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:3;	IsEnd:False
N: 3;	Name:main;	Set:Main;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:4;	IsEnd:False
N: 4;	Name:{;	Set:OpeningBrace;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:5;	IsEnd:False
N: 5;	Name:<body>;	Set:DEnd, Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:7;	IsEnd:False
N: 6;	Name:};	Set:ClosingBrace;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 7;	Name:<declarations>;	Set:DEnd, Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:11;	IsEnd:False
N: 8;	Name:<body___10000>;	Set:ClosingBrace, For, If, Identifier;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:9;	IsEnd:False
N: 9;	Name:[EPS];	Set:ClosingBrace;	Shift:False;	OnErr:10;	Stack:False;	GoTo:-1;	IsEnd:False
N: 10;	Name:<operators>;	Set:For, If, Identifier;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:25;	IsEnd:False
N: 11;	Name:<declarations_0>;	Set:DEnd, Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:13;	IsEnd:False
N: 12;	Name:@@@;	Set:DEnd;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 13;	Name:[EPS];	Set:DEnd;	Shift:False;	OnErr:14;	Stack:False;	GoTo:-1;	IsEnd:False
N: 14;	Name:<declaration>;	Set:Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:17;	IsEnd:False
N: 15;	Name:`;	Set:Tilda;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:16;	IsEnd:False
N: 16;	Name:<declarations_0>;	Set:DEnd, Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:13;	IsEnd:False
N: 17;	Name:<type>;	Set:Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:19;	IsEnd:False
N: 18;	Name:#IDENTIFIER#;	Set:Identifier;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 19;	Name:bool;	Set:Bool;	Shift:True;	OnErr:20;	Stack:False;	GoTo:-1;	IsEnd:False
N: 20;	Name:char;	Set:Char;	Shift:True;	OnErr:21;	Stack:False;	GoTo:-1;	IsEnd:False
N: 21;	Name:float;	Set:Float;	Shift:True;	OnErr:22;	Stack:False;	GoTo:-1;	IsEnd:False
N: 22;	Name:int;	Set:Int;	Shift:True;	OnErr:23;	Stack:False;	GoTo:-1;	IsEnd:False
N: 23;	Name:IntArray;	Set:IntArray;	Shift:True;	OnErr:24;	Stack:False;	GoTo:-1;	IsEnd:False
N: 24;	Name:string;	Set:String;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 25;	Name:<operator>;	Set:For, If, Identifier;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:29;	IsEnd:False
N: 26;	Name:<operators___10000>;	Set:ClosingBrace, For, If, Identifier;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:27;	IsEnd:False
N: 27;	Name:[EPS];	Set:ClosingBrace;	Shift:False;	OnErr:28;	Stack:False;	GoTo:-1;	IsEnd:False
N: 28;	Name:<operators>;	Set:For, If, Identifier;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:25;	IsEnd:False
N: 29;	Name:<for>;	Set:For;	Shift:False;	OnErr:30;	Stack:False;	GoTo:52;	IsEnd:False
N: 30;	Name:<if>;	Set:If;	Shift:False;	OnErr:31;	Stack:False;	GoTo:67;	IsEnd:False
N: 31;	Name:<leftValue>;	Set:Identifier;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:35;	IsEnd:False
N: 32;	Name:=;	Set:Equally;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:33;	IsEnd:False
N: 33;	Name:<rightValue>;	Set:DecimalWholeNumber, False, True, Identifier;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:36;	IsEnd:False
N: 34;	Name:`;	Set:Tilda;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 35;	Name:<identOrIndexIdent>;	Set:Identifier;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:39;	IsEnd:False
N: 36;	Name:#DecimalWholeNumber#;	Set:DecimalWholeNumber;	Shift:True;	OnErr:37;	Stack:False;	GoTo:-1;	IsEnd:False
N: 37;	Name:<boolOp>;	Set:False, True;	Shift:False;	OnErr:38;	Stack:False;	GoTo:50;	IsEnd:False
N: 38;	Name:<identOrIndexIdent>;	Set:Identifier;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:39;	IsEnd:False
N: 39;	Name:#IDENTIFIER#;	Set:Identifier;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:40;	IsEnd:False
N: 40;	Name:<identOrIndexIdent___10000>;	Set:OpeningSquareBrace, Equally, Tilda;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:41;	IsEnd:False
N: 41;	Name:[;	Set:OpeningSquareBrace;	Shift:True;	OnErr:43;	Stack:False;	GoTo:42;	IsEnd:False
N: 42;	Name:<identOrIndexIdent___10000___10000>;	Set:Identifier;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:44;	IsEnd:False
N: 43;	Name:[EPS];	Set:Equally, Tilda;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 44;	Name:#IDENTIFIER#;	Set:Identifier;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:45;	IsEnd:False
N: 45;	Name:<identOrIndexIdent___10000___10000___10000>;	Set:Minis, ClosingSquareBrace;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:46;	IsEnd:False
N: 46;	Name:-;	Set:Minis;	Shift:True;	OnErr:49;	Stack:False;	GoTo:47;	IsEnd:False
N: 47;	Name:#DecimalWholeNumber#;	Set:DecimalWholeNumber;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:48;	IsEnd:False
N: 48;	Name:];	Set:ClosingSquareBrace;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 49;	Name:];	Set:ClosingSquareBrace;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 50;	Name:false;	Set:False;	Shift:True;	OnErr:51;	Stack:False;	GoTo:-1;	IsEnd:False
N: 51;	Name:true;	Set:True;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 52;	Name:for;	Set:For;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:53;	IsEnd:False
N: 53;	Name:(;	Set:OpeningRoundBracket;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:54;	IsEnd:False
N: 54;	Name:#IDENTIFIER#;	Set:Identifier;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:55;	IsEnd:False
N: 55;	Name:=;	Set:Equally;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:56;	IsEnd:False
N: 56;	Name:#DecimalWholeNumber#;	Set:DecimalWholeNumber;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:57;	IsEnd:False
N: 57;	Name:`;	Set:Tilda;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:58;	IsEnd:False
N: 58;	Name:<boolStatement>;	Set:Identifier;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:81;	IsEnd:False
N: 59;	Name:`;	Set:Tilda;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:60;	IsEnd:False
N: 60;	Name:#IDENTIFIER#;	Set:Identifier;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:61;	IsEnd:False
N: 61;	Name:+;	Set:Plus;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:62;	IsEnd:False
N: 62;	Name:+;	Set:Plus;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:63;	IsEnd:False
N: 63;	Name:);	Set:ClosingRoundBracket;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:64;	IsEnd:False
N: 64;	Name:{;	Set:OpeningBrace;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:65;	IsEnd:False
N: 65;	Name:<body>;	Set:DEnd, Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:7;	IsEnd:False
N: 66;	Name:};	Set:ClosingBrace;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 67;	Name:if;	Set:If;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:68;	IsEnd:False
N: 68;	Name:(;	Set:OpeningRoundBracket;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:69;	IsEnd:False
N: 69;	Name:<boolStatement>;	Set:Identifier;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:81;	IsEnd:False
N: 70;	Name:);	Set:ClosingRoundBracket;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:71;	IsEnd:False
N: 71;	Name:{;	Set:OpeningBrace;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:72;	IsEnd:False
N: 72;	Name:<body>;	Set:DEnd, Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:7;	IsEnd:False
N: 73;	Name:};	Set:ClosingBrace;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 74;	Name:while;	Set:While;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:75;	IsEnd:False
N: 75;	Name:(;	Set:OpeningRoundBracket;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:76;	IsEnd:False
N: 76;	Name:<boolStatement>;	Set:Identifier;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:81;	IsEnd:False
N: 77;	Name:);	Set:ClosingRoundBracket;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:78;	IsEnd:False
N: 78;	Name:{;	Set:OpeningBrace;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:79;	IsEnd:False
N: 79;	Name:<body>;	Set:DEnd, Bool, Char, Float, Int, IntArray, String;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:7;	IsEnd:False
N: 80;	Name:};	Set:ClosingBrace;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 81;	Name:<fieldOrIdent>;	Set:Identifier;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:92;	IsEnd:False
N: 82;	Name:<boolStatement___10000>;	Set:Tilda, ClosingRoundBracket, ExclamationMark, Less, Equally, More;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:83;	IsEnd:False
N: 83;	Name:[EPS];	Set:Tilda, ClosingRoundBracket;	Shift:False;	OnErr:84;	Stack:False;	GoTo:-1;	IsEnd:False
N: 84;	Name:<condition>;	Set:ExclamationMark, Less, Equally, More;	Shift:False;	OnErr:-1;	Stack:True;	GoTo:86;	IsEnd:False
N: 85;	Name:<fieldOrIdent>;	Set:Identifier;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:92;	IsEnd:False
N: 86;	Name:!;	Set:ExclamationMark;	Shift:True;	OnErr:88;	Stack:False;	GoTo:87;	IsEnd:False
N: 87;	Name:=;	Set:Equally;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 88;	Name:<;	Set:Less;	Shift:True;	OnErr:89;	Stack:False;	GoTo:-1;	IsEnd:False
N: 89;	Name:=;	Set:Equally;	Shift:True;	OnErr:91;	Stack:False;	GoTo:90;	IsEnd:False
N: 90;	Name:=;	Set:Equally;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 91;	Name:>;	Set:More;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
N: 92;	Name:#IDENTIFIER#;	Set:Identifier;	Shift:True;	OnErr:-1;	Stack:False;	GoTo:93;	IsEnd:False
N: 93;	Name:<fieldOrIdent___10000>;	Set:Point, Tilda, ClosingRoundBracket, ExclamationMark, Less, Equally, More;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:94;	IsEnd:False
N: 94;	Name:.;	Set:Point;	Shift:True;	OnErr:96;	Stack:False;	GoTo:95;	IsEnd:False
N: 95;	Name:<fieldOrIdent>;	Set:Identifier;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:92;	IsEnd:False
N: 96;	Name:[EPS];	Set:Tilda, ClosingRoundBracket, ExclamationMark, Less, Equally, More;	Shift:False;	OnErr:-1;	Stack:False;	GoTo:-1;	IsEnd:False
